@use "sass:math";

// Animation
@mixin keyF($anim) {
  @keyframes #{$anim} {
    @content;
  }
}

// Responsive Navbar
@mixin responsive_navbar {
  @media (max-width: 767px) {
    .open_btn {
      display: grid;
      place-items: center;
    }
    .navbar {
      position: fixed;
      inset: 0;
      width: 100%;
      height: 100%;
      background-color: rgb(65 70 73 / 70%);
      visibility: hidden;
      opacity: 0;
      transition: 0.4s ease-out;
      z-index: 110;
      .nav_menu {
        position: fixed;
        flex-direction: column;
        align-items: flex-start;
        width: calc(100% - 30px);
        height: 100%;
        background-color: $theme;
        padding: calc($spacer * 2) 0;
        transform: translateX(calc(-100% - 30px));
        transition: inherit;
        li {
          width: 100%;
          .nav_link {
            width: inherit;
          }
        }
        .close_btn {
          display: block;
        }
      }
      &.open {
        visibility: visible;
        opacity: 1;
        .nav_menu {
          transform: translateX(0);
        }
      }
    }

    .header_buttons {
      position: fixed;
      left: 0;
      bottom: 0;
      width: 100%;
      height: 40px;
      gap: 0;
      background-color: $glass;
      z-index: 50;
      .btn {
        flex: 1;
        height: 100%;
        border-radius: 5px;
        &:last-of-type {
          .total_fav_movies {
            bottom: 3px;
            font-size: 10px;
            font-weight: bold;
            line-height: 18px;
            @include circle(16px);
          }
        }
      }
    }
  }
}

// close_btn
@mixin close_btn($bg_color, $color) {
  position: absolute;
  width: 30px;
  height: 30px;
  background-color: $bg_color;
  color: $color;
}

// custom_icon
@mixin custom_icon($color) {
  -webkit-text-fill-color: transparent;
  -webkit-text-stroke: 1px $color;
}

// circle
@mixin circle($dimensions) {
  width: $dimensions;
  height: $dimensions;
  border-radius: 50%;
}

// rounded
@mixin rounded($dimensions) {
  width: $dimensions;
  height: $dimensions;
  border-radius: math.div($base-radius, 4);
}

// Overlay
@mixin overlay($color) {
  content: "";
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  background-color: $color;
  z-index: 1;
}

// Centering
@mixin centering {
  display: flex;
  justify-content: center;
  align-items: center;
}

// space_between
@mixin space_between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin banner_center {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  display: grid;
  align-items: center;
  z-index: 2;
}

// Scroll Bar
@mixin scroll_bar($direction) {
  @if ($direction == "y") {
    &::-webkit-scrollbar {
      width: 0.5rem;
    }
  } @else if ($direction == "x") {
    &::-webkit-scrollbar {
      height: 0.5rem;
    }
  }

  &::-webkit-scrollbar-track {
    background-color: #fafafa;
    border-radius: $rounded;
    box-shadow: 1px 0 3px 0 rgba(0, 0, 0, 0.5) inset;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $red;
    border-radius: $rounded;
  }
}

// Responsive Font
@function strip-unit($value) {
  @return math.div($value, ($value * 0 + 1));
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}
